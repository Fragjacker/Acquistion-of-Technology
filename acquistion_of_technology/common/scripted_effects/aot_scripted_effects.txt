@inner_mega_cannon_distance = 208
@outer_mega_cannon_distance = 438
@sigma_habitat_distance = 245
@sigma_habitat_size = 25
@enigmalith_orbit_distance = 37.5
##############################
# PHANON VAULT PROTECC FLEETS
##############################
create_protecc_country = {
	create_species = {
		name = "Phanon GLA Workers"
		class = HUM
		portrait = human
		traits = random
		extra_trait_points = 6
		allow_negative_traits = no
		effect = {
			save_global_event_target_as = phanon_species
		}
	}
	create_species = {
		name = "Phanon Operatives"
		class = PHANON
		portrait = acot_pmc
		traits = random
		extra_trait_points = 10
		allow_negative_traits = no
		effect = {
			save_global_event_target_as = phanon_operative_species
		}
	}
	create_country = {
		name = "Phanon P.R.O.T.E.C.C."
		name_list = Phanon
		species = event_target:phanon_operative_species
		type = aot_phanon_protecc
		civics = {
			civic = civic_acot_phanon_fleet
			civic = civic_acot_phanon_corps
		}
		origin = "origin_default"
		flag = {
			background = {
				category = "backgrounds"
				file = "v.dds"
			}
			icon = {
				category = phanon
				file = flag_phanon.dds
			}
			colors = {
				"red"
				"black"
				"null"
				"null"
			}
		}
		ethos = {
			ethic = ethic_fanatic_authoritarian
			ethic = ethic_militarist
		}
		ignore_initial_colony_error = yes
		effect = {
			save_global_event_target_as = phanon_protecc_base_country
		}
	}
	last_created_country = {
		set_graphical_culture = acot_pmc
		set_country_flag = phanon_protecc_base_country
		create_ship_design = {
			design = "NAME_ACOT_STAR_COMMANDER"
		}
		add_ship_design = last_created_design
		create_ship_design = {
			design = "NAME_ACOT_STARBENDER"
		}
		add_ship_design = last_created_design
		### ESTABLISHU CONTACTSU AND GO MAD
		establish_communications = root
		every_country = {
			establish_communications_no_message = event_target:phanon_protecc_base_country
			set_faction_hostility = {
				target = event_target:phanon_protecc_base_country
				set_hostile = yes
				set_neutral = no
				set_friendly = no
			}
		}
		set_faction_hostility = {
			target = event_target:phanon_base_country
			set_hostile = no
			set_neutral = no
			set_friendly = yes
		}
	}
}

create_phanon_protecc_wave_1 = {
	owner = {
		create_leader = {
			class = admiral
			species = event_target:phanon_operative_species
			name = "Phanon Operative Type A"
			skill = 10
			immortal = yes
			leader_age_min = 1000
			leader_age_max = 100000
			traits = {
				trait = leader_trait_acot_phanon_admiral
				trait = leader_trait_admiral_cyborg
				trait = leader_trait_admiral_psionic
				trait = leader_trait_admiral_erudite
			}
			event_leader = yes			# prevents this leader from leading factions and winning elections
			effect = {
				random_list = {
					5 = {
						set_name = "A11-C"
					}
					5 = {
						set_name = "A35-C"
					}
					5 = {
						set_name = "A24-A"
					}
					5 = {
						set_name = "A07-B"
					}
					5 = {
						set_name = "A65-A"
					}
					5 = {
						set_name = "A28-B"
					}
					5 = {
						set_name = "A41-B"
					}
					5 = {
						set_name = "A17-A"
					}
					5 = {
						set_name = "A62-A"
					}
					5 = {
						set_name = "A67-C"
					}
					5 = {
						set_name = "A42-B"
					}
					5 = {
						set_name = "A91-B"
					}
					5 = {
						set_name = "A85-C"
					}
					5 = {
						set_name = "A53-C"
					}
					5 = {
						set_name = "A10-B"
					}
					5 = {
						set_name = "A17-A"
					}
				}
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:phanon_protecc_base_country
			while = {
				count = 10
				create_ship = {
					name = random
					design = "NAME_ACOT_DESTROYER"
					graphical_culture = "acot_pmc"
				}
			}
			assign_leader = last_created_leader
			while = {
				count = 15
				create_ship = {
					name = random
					design = "NAME_ACOT_STARFIGHTERS"
					graphical_culture = "acot_pmc"
				}
			}
			set_formation_scale = 2
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 275
			set_location = {
				target = prev
				distance = 25
				angle = 15
			}
		}
		settings = {
			is_boss = no
			garrison = yes
		}
	}
}

create_phanon_protecc_wave_2 = {
	owner = {
		create_leader = {
			class = admiral
			species = event_target:phanon_operative_species
			name = "Phanon Operative Type A"
			skill = 10
			immortal = yes
			leader_age_min = 1000
			leader_age_max = 100000
			traits = {
				trait = leader_trait_acot_phanon_admiral
				trait = leader_trait_admiral_cyborg
				trait = leader_trait_admiral_psionic
				trait = leader_trait_admiral_erudite
			}
			event_leader = yes			# prevents this leader from leading factions and winning elections
			effect = {
				random_list = {
					5 = {
						set_name = "A11-C"
					}
					5 = {
						set_name = "A35-C"
					}
					5 = {
						set_name = "A24-A"
					}
					5 = {
						set_name = "A07-B"
					}
					5 = {
						set_name = "A65-A"
					}
					5 = {
						set_name = "A28-B"
					}
					5 = {
						set_name = "A41-B"
					}
					5 = {
						set_name = "A17-A"
					}
					5 = {
						set_name = "A62-A"
					}
					5 = {
						set_name = "A67-C"
					}
					5 = {
						set_name = "A42-B"
					}
					5 = {
						set_name = "A91-B"
					}
					5 = {
						set_name = "A85-C"
					}
					5 = {
						set_name = "A53-C"
					}
					5 = {
						set_name = "A10-B"
					}
					5 = {
						set_name = "A17-A"
					}
				}
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:phanon_protecc_base_country
			while = {
				count = 2
				create_ship = {
					name = random
					design = "NAME_ACOT_DEVASTATOR"
					graphical_culture = "acot_pmc"
				}
			}
			assign_leader = last_created_leader
			while = {
				count = 10
				create_ship = {
					name = random
					design = "NAME_ACOT_DESTROYER"
					graphical_culture = "acot_pmc"
				}
			}
			while = {
				count = 15
				create_ship = {
					name = random
					design = "NAME_ACOT_STARFIGHTERS"
					graphical_culture = "acot_pmc"
				}
			}
			set_formation_scale = 2
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 275
			set_location = {
				target = prev
				distance = 25
				angle = 15
			}
		}
		settings = {
			is_boss = no
			garrison = yes
		}
	}
}

create_phanon_protecc_wave_3 = {
	owner = {
		create_leader = {
			class = admiral
			species = event_target:phanon_operative_species
			name = "Phanon Operative Type A"
			skill = 10
			immortal = yes
			leader_age_min = 1000
			leader_age_max = 100000
			traits = {
				trait = leader_trait_acot_phanon_admiral
				trait = leader_trait_admiral_cyborg
				trait = leader_trait_admiral_psionic
				trait = leader_trait_admiral_erudite
			}
			event_leader = yes			# prevents this leader from leading factions and winning elections
			effect = {
				random_list = {
					5 = {
						set_name = "A11-C"
					}
					5 = {
						set_name = "A35-C"
					}
					5 = {
						set_name = "A24-A"
					}
					5 = {
						set_name = "A07-B"
					}
					5 = {
						set_name = "A65-A"
					}
					5 = {
						set_name = "A28-B"
					}
					5 = {
						set_name = "A41-B"
					}
					5 = {
						set_name = "A17-A"
					}
					5 = {
						set_name = "A62-A"
					}
					5 = {
						set_name = "A67-C"
					}
					5 = {
						set_name = "A42-B"
					}
					5 = {
						set_name = "A91-B"
					}
					5 = {
						set_name = "A85-C"
					}
					5 = {
						set_name = "A53-C"
					}
					5 = {
						set_name = "A10-B"
					}
					5 = {
						set_name = "A17-A"
					}
				}
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:phanon_protecc_base_country
			create_ship = {
				name = random
				design = "NAME_ACOT_ANNIHILATOR"
				graphical_culture = "acot_pmc"
			}
			assign_leader = last_created_leader
			while = {
				count = 8
				create_ship = {
					name = random
					design = "NAME_ACOT_DEVASTATOR"
					graphical_culture = "acot_pmc"
				}
			}
			while = {
				count = 12
				create_ship = {
					name = random
					design = "NAME_ACOT_DESTROYER"
					graphical_culture = "acot_pmc"
				}
			}
			while = {
				count = 15
				create_ship = {
					name = random
					design = "NAME_ACOT_STARFIGHTERS"
					graphical_culture = "acot_pmc"
				}
			}
			set_formation_scale = 2
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 275
			set_location = {
				target = prev
				distance = 25
				angle = 15
			}
		}
		settings = {
			is_boss = no
			garrison = yes
		}
	}
}

create_phanon_protecc_wave_4 = {
	owner = {
		create_leader = {
			class = admiral
			species = event_target:phanon_operative_species
			name = "Phanon Operative Type A"
			skill = 10
			immortal = yes
			leader_age_min = 1000
			leader_age_max = 100000
			traits = {
				trait = leader_trait_acot_phanon_admiral
				trait = leader_trait_admiral_cyborg
				trait = leader_trait_admiral_psionic
				trait = leader_trait_admiral_erudite
			}
			event_leader = yes			# prevents this leader from leading factions and winning elections
			effect = {
				random_list = {
					5 = {
						set_name = "A11-C"
					}
					5 = {
						set_name = "A35-C"
					}
					5 = {
						set_name = "A24-A"
					}
					5 = {
						set_name = "A07-B"
					}
					5 = {
						set_name = "A65-A"
					}
					5 = {
						set_name = "A28-B"
					}
					5 = {
						set_name = "A41-B"
					}
					5 = {
						set_name = "A17-A"
					}
					5 = {
						set_name = "A62-A"
					}
					5 = {
						set_name = "A67-C"
					}
					5 = {
						set_name = "A42-B"
					}
					5 = {
						set_name = "A91-B"
					}
					5 = {
						set_name = "A85-C"
					}
					5 = {
						set_name = "A53-C"
					}
					5 = {
						set_name = "A10-B"
					}
					5 = {
						set_name = "A17-A"
					}
				}
			}
		}
	}
	create_fleet = {
		effect = {
			set_owner = event_target:phanon_protecc_base_country
			create_ship = {
				name = random
				design = "NAME_ACOT_ANNIHILATOR"
				graphical_culture = "acot_pmc"
			}
			assign_leader = last_created_leader
			while = {
				count = 8
				create_ship = {
					name = random
					design = "NAME_ACOT_DEVASTATOR"
					graphical_culture = "acot_pmc"
				}
			}
			while = {
				count = 12
				create_ship = {
					name = random
					design = "NAME_ACOT_DESTROYER"
					graphical_culture = "acot_pmc"
				}
			}
			while = {
				count = 15
				create_ship = {
					name = random
					design = "NAME_ACOT_STARFIGHTERS"
					graphical_culture = "acot_pmc"
				}
			}
			set_formation_scale = 2
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 275
			set_location = {
				target = prev
				distance = 25
				angle = 15
			}
		}
		settings = {
			is_boss = no
			garrison = yes
		}
	}
}

create_phanon_vault_raid_protecc_fleet = {
	event_target:phanon_protecc_base_country = {
		create_leader = {
			class = admiral
			species = event_target:phanon_operative_species
			name = "Phanon Operative Type A"
			skill = 10
			immortal = yes
			leader_age_min = 1000
			leader_age_max = 100000
			traits = {
				trait = leader_trait_acot_phanon_admiral
				trait = leader_trait_admiral_cyborg
				trait = leader_trait_admiral_psionic
				trait = leader_trait_admiral_erudite
			}
			event_leader = yes			# prevents this leader from leading factions and winning elections
			effect = {
				random_list = {
					5 = {
						set_name = "A11-C"
					}
					5 = {
						set_name = "A35-C"
					}
					5 = {
						set_name = "A24-A"
					}
					5 = {
						set_name = "A07-B"
					}
					5 = {
						set_name = "A65-A"
					}
					5 = {
						set_name = "A28-B"
					}
					5 = {
						set_name = "A41-B"
					}
					5 = {
						set_name = "A17-A"
					}
					5 = {
						set_name = "A62-A"
					}
					5 = {
						set_name = "A67-C"
					}
					5 = {
						set_name = "A42-B"
					}
					5 = {
						set_name = "A91-B"
					}
					5 = {
						set_name = "A85-C"
					}
					5 = {
						set_name = "A53-C"
					}
					5 = {
						set_name = "A10-B"
					}
					5 = {
						set_name = "A17-A"
					}
				}
			}
		}
	}
	create_fleet = {
		name = "Phanon Vault Defenders"
		effect = {
			set_owner = event_target:phanon_protecc_base_country
			while = {
				count = 15
				create_ship = {
					name = random
					design = "NAME_ACOT_STARFIGHTERS"
					graphical_culture = "acot_pmc"
				}
			}
			assign_leader = last_created_leader
			set_formation_scale = 2
			set_fleet_stance = aggressive
			set_aggro_range_measure_from = self
			set_aggro_range = 275
			set_location = {
				target = prev
				distance = 25
				angle = 15
			}
		}
		settings = {
			is_boss = no
			garrison = yes
		}
	}
}

create_vault_defense_drones = {
	if = {
		limit = {
			NOT = {
				exists = event_target:phanon_protecc_base_country
			}
		}
		create_protecc_country = yes
	}
	create_phanon_vault_raid_protecc_fleet = yes
}

#Move the spawned fleet to system sun if spawned too far outside.
move_protecc_fleet_to_system_star = {
	solar_system = {
		system_star = {
			save_event_target_as = this_system_star
		}
		every_fleet_in_system = {
			limit = {
				is_owned_by = event_target:phanon_protecc_base_country
			}
			auto_move_to_planet = {
				target = event_target:this_system_star
				clear_auto_move_on_arrival = yes
			}
		}
	}
}

# Phanon Pylon blasts system to bits
phanon_destroy_solar_system = {
	solar_system = {
		set_star_class = sc_phanon_pylon
	}
	every_system_planet = {
		limit = {
			is_star = yes
		}
		save_event_target_as = last_created_phanon_pylon
		create_ambient_object = {
			type = "star_explosion"
			play_animation_once = yes
			location = this
		}
		last_created_ambient_object = {
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
		change_pc = pc_phanon_pylon_star
		remove_modifier = giga_o_star_modifier
		clear_planet_modifiers = yes
	}
	every_system_planet = {
		limit = {
			is_star = no
		}
		remove_planet = yes
	}
	set_asteroid_belt = {
		radius = 0
	}
	every_system_planet = {
		clear_deposits = yes
		clear_planet_modifiers = yes
		prevent_anomaly = yes
	}
	every_system_planet = {
		limit = {
			is_asteroid = yes
		}
		clear_deposits = yes
	}
	every_system_planet = {
		limit = {
			exists = orbital_station
		}
		orbital_station = {
			dismantle = yes
		}
	}
	event_target:last_created_phanon_pylon = {
		create_ambient_object = {
			type = "phanon_dimensional_rift_portal"
			location = this
		}
		last_created_ambient_object = {
			set_ambient_object_flag = phanon_dimensional_rift_system_effect
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
	}
}

# Sigma Star blasts system to bits
sigma_destroy_solar_system = {
	solar_system = {
		set_star_class = sc_sigma_star
	}
	every_system_planet = {
		limit = {
			is_star = yes
		}
		save_event_target_as = last_created_sigma_star
		create_ambient_object = {
			type = "star_explosion"
			play_animation_once = yes
			location = this
		}
		last_created_ambient_object = {
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
		change_pc = pc_sigma_star
		remove_modifier = giga_o_star_modifier
		clear_planet_modifiers = yes
	}
	every_system_planet = {
		limit = {
			is_star = no
		}
		remove_planet = yes
	}
	set_asteroid_belt = {
		radius = 0
	}
	every_system_planet = {
		clear_deposits = yes
		clear_planet_modifiers = yes
		prevent_anomaly = yes
	}
	every_system_planet = {
		limit = {
			is_asteroid = yes
		}
		clear_deposits = yes
	}
	every_system_planet = {
		limit = {
			exists = orbital_station
		}
		orbital_station = {
			dismantle = yes
		}
	}
	event_target:last_created_sigma_star = {
		create_ambient_object = {
			type = "phanon_dimensional_rift_portal"
			location = this
		}
		last_created_ambient_object = {
			set_ambient_object_flag = phanon_dimensional_rift_system_effect
			set_location = {
				target = prev
				distance = 0
				angle = random
			}
		}
	}
}

# Upgrade phanon pylon to sigma star without beeg boom.
create_sigma_Star = {
	solar_system = {
		set_star_class = sc_sigma_star
	}
	every_system_planet = {
		limit = {
			is_star = yes
		}
		save_event_target_as = last_created_sigma_star
		change_pc = pc_sigma_star
	}
	set_asteroid_belt = {
		radius = 0
	}
}

#######################
# PHANON INFRASTRUCTURE
#######################
spawn_inner_phanon_mega_turrets = {
	spawn_megastructure = {
		name = "Mega Turret 1"
		type = "phanon_megaturret_1"
		orbit_angle = 0
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 2"
		type = "phanon_megaturret_1"
		orbit_angle = 30
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 3"
		type = "phanon_megaturret_1"
		orbit_angle = 60
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 4"
		type = "phanon_megaturret_1"
		orbit_angle = 120
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 5"
		type = "phanon_megaturret_1"
		orbit_angle = 150
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 6"
		type = "phanon_megaturret_1"
		orbit_angle = 180
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 7"
		type = "phanon_megaturret_1"
		orbit_angle = 240
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 8"
		type = "phanon_megaturret_1"
		orbit_angle = 270
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 9"
		type = "phanon_megaturret_1"
		orbit_angle = 300
		orbit_distance = @inner_mega_cannon_distance
		owner = from
		planet = star
	}
}

spawn_outer_phanon_mega_turrets = {
	spawn_megastructure = {
		name = "Mega Turret 1"
		type = "phanon_megaturret_1"
		orbit_angle = 0
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 2"
		type = "phanon_megaturret_1"
		orbit_angle = 15
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 3"
		type = "phanon_megaturret_1"
		orbit_angle = 30
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 4"
		type = "phanon_megaturret_1"
		orbit_angle = 45
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 5"
		type = "phanon_megaturret_1"
		orbit_angle = 60
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 6"
		type = "phanon_megaturret_1"
		orbit_angle = 75
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 7"
		type = "phanon_megaturret_1"
		orbit_angle = 90
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 8"
		type = "phanon_megaturret_1"
		orbit_angle = 105
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 9"
		type = "phanon_megaturret_1"
		orbit_angle = 120
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 10"
		type = "phanon_megaturret_1"
		orbit_angle = 135
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 11"
		type = "phanon_megaturret_1"
		orbit_angle = 150
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 12"
		type = "phanon_megaturret_1"
		orbit_angle = 165
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 13"
		type = "phanon_megaturret_1"
		orbit_angle = 180
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 14"
		type = "phanon_megaturret_1"
		orbit_angle = 195
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 15"
		type = "phanon_megaturret_1"
		orbit_angle = 210
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 16"
		type = "phanon_megaturret_1"
		orbit_angle = 225
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 17"
		type = "phanon_megaturret_1"
		orbit_angle = 240
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 18"
		type = "phanon_megaturret_1"
		orbit_angle = 255
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 19"
		type = "phanon_megaturret_1"
		orbit_angle = 270
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 20"
		type = "phanon_megaturret_1"
		orbit_angle = 285
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 21"
		type = "phanon_megaturret_1"
		orbit_angle = 300
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 22"
		type = "phanon_megaturret_1"
		orbit_angle = 315
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 23"
		type = "phanon_megaturret_1"
		orbit_angle = 330
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
	spawn_megastructure = {
		name = "Mega Turret 24"
		type = "phanon_megaturret_1"
		orbit_angle = 345
		orbit_distance = @outer_mega_cannon_distance
		owner = from
		planet = star
	}
}

spawn_functional_megaturret = {
	# Spawn them big boi cannons
	create_fleet = {
		name = "PHANON MEGATURRET"
		settings = {
			spawn_debris = no
		}
		effect = {
			set_owner = root
			create_ship = {
				name = "PHANON MEGATURRET"
				random_existing_design = aot_megaturret
				effect = {
				}
			}
			set_formation_scale = 2
			set_location = {
				target = fromfrom
				distance = 0
				angle = 90
				direction = out_system
			}
		}
	}
}

spawn_great_wall_macripps = {
	system_star = {
		save_event_target_as = this_system_star
	}
	spawn_planet = {
		class = pc_phanon_macripp
		location = fromfrom
		has_ring = no
		orbit_distance_offset = @sigma_habitat_distance
		orbit_angle_offset = 0
		init_effect = {
			save_event_target_as = last_spawned_macripp
			set_name = "MacR.I.P.P. Data Core 1"
			change_pc = pc_phanon_macripp
			set_colony_type = col_phanon_macripp
			add_modifier = {
				modifier = phanon_macripp_mod
				days = -1
			}
			set_planet_entity = {
				entity = "phanon_macRIPP_stage_3_entity"
			}
			set_surveyed = {
				surveyed = yes
				surveyor = FROM
			}
			set_all_comms_surveyed = yes
			clear_blockers = yes
			set_planet_flag = megastructure
			set_planet_flag = macRIPP_planet
		}
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 0
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 120
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 240
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_planet = {
		class = pc_phanon_macripp
		location = fromfrom
		has_ring = no
		orbit_distance_offset = @sigma_habitat_distance
		orbit_angle_offset = 120
		init_effect = {
			save_event_target_as = last_spawned_macripp
			set_name = "MacR.I.P.P. Data Core 2"
			change_pc = pc_phanon_macripp
			set_colony_type = col_phanon_macripp
			add_modifier = {
				modifier = phanon_macripp_mod
				days = -1
			}
			set_planet_entity = {
				entity = "phanon_macRIPP_stage_3_entity"
			}
			set_surveyed = {
				surveyed = yes
				surveyor = FROM
			}
			set_all_comms_surveyed = yes
			clear_blockers = yes
			set_planet_flag = megastructure
			set_planet_flag = macRIPP_planet
		}
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 0
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 120
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 240
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_planet = {
		class = pc_phanon_macripp
		location = fromfrom
		has_ring = no
		orbit_distance_offset = @sigma_habitat_distance
		orbit_angle_offset = 240
		init_effect = {
			save_event_target_as = last_spawned_macripp
			set_name = "MacR.I.P.P. Data Core 3"
			change_pc = pc_phanon_macripp
			set_colony_type = col_phanon_macripp
			add_modifier = {
				modifier = phanon_macripp_mod
				days = -1
			}
			set_planet_entity = {
				entity = "phanon_macRIPP_stage_3_entity"
			}
			set_surveyed = {
				surveyed = yes
				surveyor = FROM
			}
			set_all_comms_surveyed = yes
			clear_blockers = yes
			set_planet_flag = megastructure
			set_planet_flag = macRIPP_planet
		}
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 0
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 120
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
	spawn_megastructure = {
		type = "aot_macripp_dark_matter_obelisk_core_pe"
		orbit_angle = 240
		orbit_distance = @enigmalith_orbit_distance
		owner = from
		planet = event_target:last_spawned_macripp
	}
}

######################### PHANON VAULT EFFECT ###########################################
### CAN CHECK LIST AT TEST EVENT
#########################################################################################
phanon_type_a_tech_gift = {
	if = {
		limit = {
			NAND = {
				has_tech_option = tech_dark_matter_power_core_re
				has_tech_option = tech_phanon_stellar_converter
				has_tech_option = tech_civil_phanon_application
			}
		}
		add_research_option = tech_dark_matter_power_core_re
		add_research_option = tech_phanon_stellar_converter
		add_research_option = tech_civil_phanon_application
	}
}

phanon_species_traits_tech_gift_card = {
	if = {
		limit = {
			NAND = {
				has_tech_option = tech_phanon_genetics
				has_tech_option = tech_phanon_augmentations
			}
		}
		add_research_option = tech_phanon_genetics
		add_research_option = tech_phanon_augmentations
	}
}

phanon_type_b_tech_gift = {
	phanon_type_a_tech_gift = yes
	phanon_species_traits_tech_gift_card = yes
	if = {
		limit = {
			NAND = {
				has_tech_option = tech_phanon_great_wall
			}
		}
		add_research_option = tech_phanon_great_wall
	}
	random_list = {
		### IN CASE NO MORE  THINGS TO GET
		0 = {
			modifier = {
				add = 10
				has_tech_option = tech_phanon_great_wall
			}
			add_resource = {
				energy = 500000
				minerals = 500000
				alloys = 500000
				food = 500000
				consumer_goods = 500000
				unity = 500000
				society_research = 500000
				engineering_research = 500000
				physics_research = 500000
			}
			IF = {
				limit = {
					has_technology = tech_dark_matter_power_core_dm
				}
				add_resource = {
					sr_dark_matter = 50000
					acot_sr_dark_energy = 50000
				}
			}
			IF = {
				limit = {
					has_technology = tech_dark_matter_power_core_se
				}
				add_resource = {
					acot_sr_stellarite = 50000
				}
			}
			IF = {
				limit = {
					has_technology = tech_dark_matter_power_core_re
				}
				add_resource = {
					aot_sr_runic_power = 50000
				}
			}
			IF = {
				limit = {
					has_lightmatter_reactor_tech = yes
				}
				add_resource = {
					acot_sr_light_matter = 5000
				}
			}
		}
	}
}

# This removes an existing capital building on the planet to prepare it for upgrades.
remove_capital_building = {
	switch = {
		trigger = has_building
		building_colony_shelter = {
			remove_building = building_colony_shelter
		}
		building_capital = {
			remove_building = building_capital
		}
		building_major_capital = {
			remove_building = building_major_capital
		}
		building_system_capital = {
			remove_building = building_system_capital
		}
		building_hab_capital = {
			remove_building = building_hab_capital
		}
		building_hab_major_capital = {
			remove_building = building_hab_major_capital
		}
		building_resort_capital = {
			remove_building = building_resort_capital
		}
		building_resort_major_capital = {
			remove_building = building_resort_major_capital
		}
		building_slave_capital = {
			remove_building = building_slave_capital
		}
		building_slave_major_capital = {
			remove_building = building_slave_major_capital
		}
		building_ancient_palace = {
			remove_building = building_ancient_palace
		}
		building_ancient_control_center = {
			remove_building = building_ancient_control_center
		}
	}
}

remove_databank_project_flag = {
	switch = {
		trigger = has_country_flag
		project_escort_selected = {
			remove_country_flag = project_escort_selected
		}
		project_bc_selected = {
			remove_country_flag = project_bc_selected
		}
		project_guard_selected = {
			remove_country_flag = project_guard_selected
		}
		project_sentinel_selected = {
			remove_country_flag = project_sentinel_selected
		}
		project_titan_selected = {
			remove_country_flag = project_titan_selected
		}
		project_pac_selected = {
			remove_country_flag = project_pac_selected
		}
		project_citadel_selected = {
			remove_country_flag = project_citadel_selected
		}
		project_initi_selected = {
			remove_country_flag = project_initi_selected
		}
		project_oracle_selected = {
			remove_country_flag = project_oracle_selected
		}
		project_emiss_selected = {
			remove_country_flag = project_emiss_selected
		}
		project_enigmalith_selected = {
			remove_country_flag = project_enigmalith_selected
		}
		project_dm_hab_selected = {
			remove_country_flag = project_dm_hab_selected
		}
		project_dm_jugg_selected = {
			remove_country_flag = project_dm_jugg_selected
		}
		project_aot_gatekeeper_selected = {
			remove_country_flag = project_aot_gatekeeper_selected
		}
		project_enigmatic_fortress_selected = {
			remove_country_flag = project_enigmatic_fortress_selected
		}
	}
}

check_production_core_state = {
	IF = {
		limit = {
			check_variable = {
				which = var_dm_production_core_energy
				value <= 0
			}
		}
		country_event = {
			id = aot_dm_production_core_events.4
		}
	}
	ELSE_IF = {
		limit = {
			check_variable = {
				which = var_dm_production_core_energy
				value > @required_dm_score
			}
		}
		country_event = {
			id = aot_dm_production_core_events.5
		}
	}
	ELSE_IF = {
		limit = {
			check_variable = {
				which = var_dm_production_core_energy
				value <= @required_dm_score
			}
			check_variable = {
				which = var_dm_production_core_energy
				value > 0
			}
			check_variable = {
				which = var_dm_production_core_energy
				value > previous_power_level_value
			}
		}
		country_event = {
			id = aot_dm_production_core_events.6
		}
	}
	ELSE = {
		country_event = {
			id = aot_dm_production_core_events.3
		}
	}
	set_variable = {
		which = previous_power_level_value
		value = var_dm_production_core_energy
	}
}

save_aot_habitat_districts = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $HOUSING$
		}
		variable = num_houses
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $ENERGY$
		}
		variable = num_energy
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $MINING$
		}
		variable = num_mines
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $INDUSTRY$
		}
		variable = num_industry
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $SCIENCE$
		}
		variable = num_research
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = $SPECIAL$
		}
		variable = num_special
	}
}

create_new_aot_habitat_districts = {
	while = {
		count = num_houses
		add_district = $HOUSING$
	}
	while = {
		count = num_energy
		add_district = $ENERGY$
	}
	while = {
		count = num_mines
		add_district = $MINING$
	}
	while = {
		count = num_industry
		add_district = $INDUSTRY$
	}
	while = {
		count = num_research
		add_district = $SCIENCE$
	}
	while = {
		count = num_special
		add_district = $SPECIAL$
	}
	clear_variable = num_houses
	clear_variable = num_energy
	clear_variable = num_mines
	clear_variable = num_industry
	clear_variable = num_research
	clear_variable = num_special
}

create_dm_habitat = {
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_hab_housing
		}
		variable = num_houses
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_hab_energy
		}
		variable = num_energy
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_hab_mining
		}
		variable = num_mines
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_hab_industrial
		}
		variable = num_industry
	}
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = {
			type = district_hab_science
		}
		variable = num_research
	}
	clear_deposits = yes
	set_colony_type = col_habitat_dm
	change_pc = pc_dm_habitat
	set_planet_entity = {
		entity = "dm_habitat_phase_01_entity"
	}
	set_planet_size = @size_lvl1
	set_planet_flag = is_base_dm_habitat
	add_modifier = {
		modifier = dm_habitat_mod
		days = -1
	}
	# Add housing districts if there's been built any previously.
	while = {
		count = num_houses
		add_district = district_dm_hab_housing
	}
	while = {
		count = num_industry
		add_district = district_dm_hab_arms_industry
	}
	while = {
		count = num_energy
		add_district = district_dm_hab_energy
	}
	while = {
		count = num_mines
		add_district = district_dm_hab_mining
	}
	while = {
		count = num_research
		add_district = district_dm_hab_research
	}
	clear_variable = num_houses
	clear_variable = num_industry
	clear_variable = num_research
	if = {
		limit = {
			has_enigmatic_capital = no
		}
		if = {
			limit = {
				has_building = building_colony_shelter
			}
			remove_building = building_colony_shelter
		}
		if = {
			limit = {
				has_building = building_capital
			}
			remove_building = building_capital
		}
		if = {
			limit = {
				has_building = building_major_capital
			}
			remove_building = building_major_capital
		}
		if = {
			limit = {
				has_building = building_system_capital
			}
			remove_building = building_system_capital
		}
		if = {
			limit = {
				has_building = building_hab_capital
			}
			remove_building = building_hab_capital
		}
		if = {
			limit = {
				has_building = building_hab_major_capital
			}
			remove_building = building_hab_major_capital
		}
		if = {
			limit = {
				has_building = building_resort_capital
			}
			remove_building = building_resort_capital
		}
		if = {
			limit = {
				has_building = building_resort_major_capital
			}
			remove_building = building_resort_major_capital
		}
		if = {
			limit = {
				has_building = building_slave_capital
			}
			remove_building = building_slave_capital
		}
		if = {
			limit = {
				has_building = building_slave_major_capital
			}
			remove_building = building_slave_major_capital
		}
		if = {
			limit = {
				has_building = building_ancient_palace
			}
			remove_building = building_ancient_palace
		}
		if = {
			limit = {
				has_building = building_ancient_control_center
			}
			remove_building = building_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_hive_cluster
			}
			remove_building = building_hive_cluster
		}
		if = {
			limit = {
				has_building = building_imperial_capital
			}
			remove_building = building_imperial_capital
		}
		if = {
			limit = {
				has_building = building_imperial_machine_capital
			}
			remove_building = building_imperial_machine_capital
		}
		if = {
			limit = {
				has_building = building_imperial_hive_capital
			}
			remove_building = building_imperial_hive_capital
		}
		# Add the appropriate building now.
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
				}
			}
			add_building = building_dm_ancient_palace
		}
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_building = building_dm_ancient_control_center
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			add_building = building_dm_ancient_hive_cluster
		}
	}
}

create_ae_habitat = {
	save_aot_habitat_districts = {
		HOUSING = district_dm_hab_housing
		ENERGY = district_dm_hab_energy
		MINING = district_dm_hab_mining
		INDUSTRY = district_dm_hab_arms_industry
		SCIENCE = district_dm_hab_research
		SPECIAL = district_dm_hab_dark_matter_energy
	}
	clear_deposits = yes
	set_colony_type = col_habitat_dm
	set_planet_flag = retrofitted_ae_habitat
	remove_modifier = dm_habitat_mod
	change_pc = pc_ae_habitat
	add_modifier = {
		modifier = ae_habitat_mod
		days = -1
	}
	create_new_aot_habitat_districts = {
		HOUSING = district_ae_hab_housing
		ENERGY = district_ae_hab_energy
		MINING = district_ae_hab_mining
		INDUSTRY = district_ae_hab_arms_industry
		SCIENCE = district_ae_hab_research
		SPECIAL = district_ae_hab_dark_matter_energy
	}
	if = {
		limit = {
			has_planet_flag = is_base_dm_habitat
		}
		set_planet_entity = {
			entity = "alpha_habitat_phase_01_entity"
		}
		set_planet_size = @size_lvl1
	}
	if = {
		limit = {
			has_planet_flag = advanced_ascended_habitat
		}
		set_planet_entity = {
			entity = "alpha_habitat_phase_02_entity"
		}
		set_planet_size = @size_lvl2
	}
	if = {
		limit = {
			has_planet_flag = advanced_ascended_habitat_2
		}
		set_planet_entity = {
			entity = "alpha_habitat_phase_03_entity"
		}
		set_planet_size = @size_lvl3
	}
	if = {
		limit = {
			has_ascended_capital = no
		}
		if = {
			limit = {
				has_building = building_colony_shelter
			}
			remove_building = building_colony_shelter
		}
		if = {
			limit = {
				has_building = building_capital
			}
			remove_building = building_capital
		}
		if = {
			limit = {
				has_building = building_major_capital
			}
			remove_building = building_major_capital
		}
		if = {
			limit = {
				has_building = building_system_capital
			}
			remove_building = building_system_capital
		}
		if = {
			limit = {
				has_building = building_hab_capital
			}
			remove_building = building_hab_capital
		}
		if = {
			limit = {
				has_building = building_hab_major_capital
			}
			remove_building = building_hab_major_capital
		}
		if = {
			limit = {
				has_building = building_resort_capital
			}
			remove_building = building_resort_capital
		}
		if = {
			limit = {
				has_building = building_resort_major_capital
			}
			remove_building = building_resort_major_capital
		}
		if = {
			limit = {
				has_building = building_slave_capital
			}
			remove_building = building_slave_capital
		}
		if = {
			limit = {
				has_building = building_slave_major_capital
			}
			remove_building = building_slave_major_capital
		}
		if = {
			limit = {
				has_building = building_ancient_palace
			}
			remove_building = building_ancient_palace
		}
		if = {
			limit = {
				has_building = building_ancient_control_center
			}
			remove_building = building_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_imperial_capital
			}
			remove_building = building_imperial_capital
		}
		if = {
			limit = {
				has_building = building_imperial_machine_capital
			}
			remove_building = building_imperial_machine_capital
		}
		if = {
			limit = {
				has_building = building_imperial_hive_capital
			}
			remove_building = building_imperial_hive_capital
		}
		if = {
			limit = {
				has_building = building_dm_ancient_control_center
			}
			remove_building = building_dm_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_dm_ancient_palace
			}
			remove_building = building_dm_ancient_palace
		}
		if = {
			limit = {
				has_building = building_dm_ancient_hive_cluster
			}
			remove_building = building_dm_ancient_hive_cluster
		}
		# Add the appropriate building now.
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
				}
			}
			add_building = building_ae_ancient_palace
		}
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_building = building_ae_ancient_control_center
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			add_building = building_ae_ancient_hive_cluster
		}
	}
}

create_phanon_habitat = {
	save_aot_habitat_districts = {
		HOUSING = district_ae_hab_housing
		ENERGY = district_ae_hab_energy
		MINING = district_ae_hab_mining
		INDUSTRY = district_ae_hab_arms_industry
		SCIENCE = district_ae_hab_research
		SPECIAL = district_ae_hab_dark_matter_energy
	}
	clear_deposits = yes
	set_colony_type = col_habitat_phanon
	set_planet_flag = retrofitted_phanon_habitat
	remove_modifier = dm_habitat_mod
	remove_modifier = ae_habitat_mod
	change_pc = pc_phanon_habitat
	add_modifier = {
		modifier = phanon_habitat_mod
		days = -1
	}
	create_new_aot_habitat_districts = {
		HOUSING = district_hab_phanon_housing
		ENERGY = district_hab_phanon_energy
		MINING = district_hab_phanon_mining
		INDUSTRY = district_hab_phanon_arms_industry
		SCIENCE = district_hab_phanon_research
		SPECIAL = district_hab_phanon_generator
	}
	if = {
		limit = {
			has_planet_flag = is_base_dm_habitat
		}
		set_planet_entity = {
			entity = "phanon_habitat_phase_01_entity"
		}
		set_planet_size = @size_lvl1
	}
	if = {
		limit = {
			has_planet_flag = advanced_ascended_habitat
		}
		set_planet_entity = {
			entity = "phanon_habitat_phase_02_entity"
		}
		set_planet_size = @size_lvl2
	}
	if = {
		limit = {
			has_planet_flag = advanced_ascended_habitat_2
		}
		set_planet_entity = {
			entity = "phanon_habitat_phase_03_entity"
		}
		set_planet_size = @size_lvl3
	}
	if = {
		limit = {
			has_phanon_capital = no
		}
		if = {
			limit = {
				has_building = building_colony_shelter
			}
			remove_building = building_colony_shelter
		}
		if = {
			limit = {
				has_building = building_capital
			}
			remove_building = building_capital
		}
		if = {
			limit = {
				has_building = building_major_capital
			}
			remove_building = building_major_capital
		}
		if = {
			limit = {
				has_building = building_system_capital
			}
			remove_building = building_system_capital
		}
		if = {
			limit = {
				has_building = building_hab_capital
			}
			remove_building = building_hab_capital
		}
		if = {
			limit = {
				has_building = building_hab_major_capital
			}
			remove_building = building_hab_major_capital
		}
		if = {
			limit = {
				has_building = building_resort_capital
			}
			remove_building = building_resort_capital
		}
		if = {
			limit = {
				has_building = building_resort_major_capital
			}
			remove_building = building_resort_major_capital
		}
		if = {
			limit = {
				has_building = building_slave_capital
			}
			remove_building = building_slave_capital
		}
		if = {
			limit = {
				has_building = building_slave_major_capital
			}
			remove_building = building_slave_major_capital
		}
		if = {
			limit = {
				has_building = building_imperial_capital
			}
			remove_building = building_imperial_capital
		}
		if = {
			limit = {
				has_building = building_imperial_machine_capital
			}
			remove_building = building_imperial_machine_capital
		}
		if = {
			limit = {
				has_building = building_imperial_hive_capital
			}
			remove_building = building_imperial_hive_capital
		}
		if = {
			limit = {
				has_building = building_ancient_palace
			}
			remove_building = building_ancient_palace
		}
		if = {
			limit = {
				has_building = building_ancient_control_center
			}
			remove_building = building_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_ae_ancient_control_center
			}
			remove_building = building_ae_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_ae_ancient_palace
			}
			remove_building = building_ae_ancient_palace
		}
		if = {
			limit = {
				has_building = building_ae_ancient_hive_cluster
			}
			remove_building = building_ae_ancient_hive_cluster
		}
		# Add the appropriate building now.
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
				}
			}
			add_building = building_phanon_palace
		}
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_building = building_phanon_control_center
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			add_building = building_phanon_hive_cluster
		}
	}
}

create_sigma_habitat = {
	save_aot_habitat_districts = {
		HOUSING = district_hab_phanon_housing
		ENERGY = district_hab_phanon_energy
		MINING = district_hab_phanon_mining
		INDUSTRY = district_hab_phanon_arms_industry
		SCIENCE = district_hab_phanon_research
		SPECIAL = district_hab_phanon_generator
	}
	clear_deposits = yes
	set_colony_type = col_habitat_stellarite
	set_planet_flag = retrofitted_sigma_habitat
	remove_modifier = dm_habitat_mod
	remove_modifier = ae_habitat_mod
	remove_modifier = phanon_habitat_mod
	change_pc = pc_sigma_habitat
	add_modifier = {
		modifier = stellarite_habitat_mod
		days = -1
	}
	create_new_aot_habitat_districts = {
		HOUSING = district_hab_stellarite_housing
		ENERGY = district_hab_stellarite_energy
		MINING = district_hab_stellarite_mining
		INDUSTRY = district_hab_stellarite_arms_industry
		SCIENCE = district_hab_stellarite_research
		SPECIAL = district_hab_stellarite_generator
	}
	if = {
		limit = {
			has_planet_flag = is_base_dm_habitat
		}
		set_planet_entity = {
			entity = "sigma_habitat_phase_01_entity"
		}
		set_planet_size = @size_lvl1
	}
	if = {
		limit = {
			has_planet_flag = advanced_ascended_habitat
		}
		set_planet_entity = {
			entity = "sigma_habitat_phase_02_entity"
		}
		set_planet_size = @size_lvl2
	}
	if = {
		limit = {
			has_planet_flag = advanced_ascended_habitat_2
		}
		set_planet_entity = {
			entity = "sigma_habitat_phase_03_entity"
		}
		set_planet_size = @size_lvl3
	}
	if = {
		limit = {
			has_stellarite_capital = no
		}
		if = {
			limit = {
				has_building = building_colony_shelter
			}
			remove_building = building_colony_shelter
		}
		if = {
			limit = {
				has_building = building_capital
			}
			remove_building = building_capital
		}
		if = {
			limit = {
				has_building = building_major_capital
			}
			remove_building = building_major_capital
		}
		if = {
			limit = {
				has_building = building_system_capital
			}
			remove_building = building_system_capital
		}
		if = {
			limit = {
				has_building = building_hab_capital
			}
			remove_building = building_hab_capital
		}
		if = {
			limit = {
				has_building = building_hab_major_capital
			}
			remove_building = building_hab_major_capital
		}
		if = {
			limit = {
				has_building = building_resort_capital
			}
			remove_building = building_resort_capital
		}
		if = {
			limit = {
				has_building = building_resort_major_capital
			}
			remove_building = building_resort_major_capital
		}
		if = {
			limit = {
				has_building = building_slave_capital
			}
			remove_building = building_slave_capital
		}
		if = {
			limit = {
				has_building = building_slave_major_capital
			}
			remove_building = building_slave_major_capital
		}
		if = {
			limit = {
				has_building = building_imperial_capital
			}
			remove_building = building_imperial_capital
		}
		if = {
			limit = {
				has_building = building_imperial_machine_capital
			}
			remove_building = building_imperial_machine_capital
		}
		if = {
			limit = {
				has_building = building_imperial_hive_capital
			}
			remove_building = building_imperial_hive_capital
		}
		if = {
			limit = {
				has_building = building_ancient_palace
			}
			remove_building = building_ancient_palace
		}
		if = {
			limit = {
				has_building = building_ancient_control_center
			}
			remove_building = building_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_ae_ancient_control_center
			}
			remove_building = building_ae_ancient_control_center
		}
		if = {
			limit = {
				has_building = building_ae_ancient_palace
			}
			remove_building = building_ae_ancient_palace
		}
		if = {
			limit = {
				has_building = building_ae_ancient_hive_cluster
			}
			remove_building = building_ae_ancient_hive_cluster
		}
		# Add the appropriate building now.
		if = {
			limit = {
				owner = {
					is_regular_empire = yes
				}
			}
			add_building = building_stellarite_palace
		}
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			add_building = building_stellarite_control_center
		}
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			add_building = building_stellarite_hive_cluster
		}
	}
}
