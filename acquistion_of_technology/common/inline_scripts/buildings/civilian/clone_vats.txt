inline_script = {
	script = shared/normal_buildings_base
	ALLOW = "$ALLOW$"
	CAN_BUILD = $CAN_BUILD$
	PREREQUISITE = $PREREQUISITE$
	UPGRADES_INTO = $UPGRADES_INTO$
	AI_FACTORS = "$AI_FACTORS$"
	TIER = $TIER$
}
inline_script = {
	script = buildings/civilian/parts/vats_and_chambers_cost
	EXPONENT = $EXPONENT$
	PLANET_MODIFIER = "$PLANET_MODIFIER$"
	PLANET_UPKEEP = "$PLANET_UPKEEP$"
}
@base_pop_growth = 3
category = pop_assembly
planet_limit = {
	base = 1
	modifier = {
		exists = owner
		owner = {
			has_tradition = tr_cloning_finish
		}
		has_enigmatic_capital = yes
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_tradition = tr_cloning_finish
		}
		has_phanon_capital = yes
		add = 1
	}
	modifier = {
		exists = owner
		owner = {
			has_tradition = tr_cloning_finish
		}
		has_stellarite_capital = yes
		add = 1
	}
}
building_sets = {
	government
	urban
}
potential = {
	potential_can_have_vats_or_evochamber = yes
}
planet_modifier = {
	logistic_growth_mult = @[ 0.1 * two_exp$EXPONENT$ ]
	bonus_pop_growth_mult = @[ 0.5 * two_exp$EXPONENT$ ]
}
destroy_trigger = {
	exists = owner
	OR = {
		AND = {
			owner = { is_ai = yes }
			free_district_slots = 0
			free_building_slots = 0
			free_housing <= 0
			free_jobs <= 0
		}
	}
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			has_technology = tech_gene_tailoring
		}
		any_owned_pop_group = {
			has_auto_modding_trait = yes
		}
	}
	modifier = {
		auto_mod_monthly_add = @[ 400 * two_exp$TIER$ ]
	}
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			game_start_auto_mod_empire = yes
		}
		any_owned_pop_group = {
			has_auto_modding_trait = yes
		}
	}
	modifier = {
		auto_mod_monthly_add = @[ 400 * two_exp$TIER$ ]
	}
}
triggered_planet_pop_group_modifier = {
	potential = {
		exists = planet.owner
		planet.owner = {
			has_cloning_tradition = no
		}
	}
	bonus_pop_growth = @[ base_pop_growth * two_exp$TIER$ ]
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			has_cloning_tradition = no
		}
	}
	fake_pop_growth_mod = @[ base_pop_growth * two_exp$TIER$ ]
}
triggered_planet_pop_group_modifier = {
	potential = {
		exists = planet.owner
		planet.owner = {
			has_cloning_tradition = yes
			NOT = {
				has_tradition = tr_genetics_efficient_cloning
			}
		}
	}
	bonus_pop_growth = @[ base_pop_growth * two_exp$TIER$ * 2 ]
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			has_cloning_tradition = yes
			NOT = {
				has_tradition = tr_genetics_efficient_cloning
			}
		}
	}
	fake_pop_growth_mod = @[ base_pop_growth * two_exp$TIER$ * 2 ]
}
triggered_planet_pop_group_modifier = {
	potential = {
		exists = planet.owner
		planet.owner = {
			has_cloning_tradition = yes
			has_tradition = tr_genetics_efficient_cloning
		}
	}
	bonus_pop_growth = @[ base_pop_growth * two_exp$TIER$ * 3 ]
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			has_cloning_tradition = yes
			has_tradition = tr_genetics_efficient_cloning
		}
	}
	fake_pop_growth_mod = @[ base_pop_growth * two_exp$TIER$ * 3 ]
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			has_country_flag = clone_army_full_potential
			has_active_tradition = tr_cloning_adopt_clone_army
		}
	}
	clone_soldiers_sustained = @[ clones_sustained_low * two_exp$TIER$ * 3 ]
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			has_country_flag = clone_army_full_potential
			has_active_tradition = tr_cloning_finish_clone_army
		}
	}
	clone_soldiers_sustained = @[ clones_sustained_low * two_exp$TIER$ * 3 ]
}
triggered_planet_modifier = {
	potential = {
		exists = owner
		owner = {
			is_cloning_authority = yes
			is_megacorp = yes
		}
	}
	planet_jobs_trade_produces_mult = @[ replicatory_association_trade_mult * two_exp$TIER$ * 3 ]
	planet_amenities_add = @[ replicatory_association_amenities_add * two_exp$TIER$ * 3 ]
}