##########################################################################
# Decisions
##########################################################################
######################## UPGRADE DECISION ######################## 
# Create Awesome Palace
decision_transform_into_awesome = {
	owned_planets_only = yes
	icon = decision_transform_into_awesome
	enactment_time = 1200
	prerequisites = {
		"tech_dm_ancient_palace"
	}
	resources = {
		category = decisions
		cost = {
			trigger = {
				owner = {
					is_ai = no
				}
			}
			minerals = 5000
			influence = 100
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
		cost = {
			trigger = {
				owner = {
					is_ai = yes
				}
			}
			minerals = 500
			influence = 10
			sr_dark_matter = 50
			acot_sr_dark_energy = 50
		}
	}
	potential = {
		owner = {
			is_regular_empire = yes
			has_technology = tech_dm_ancient_palace
		}
		has_enigmatic_capital = no
	}
	allow = {
	}
	effect = {
		hidden_effect = {
			remove_capital_building = yes
			add_building = building_dm_ancient_palace
		}
	}
	ai_weight = {
		weight = 10000
	}
}

# Create Awesome Nexus
decision_transform_into_awesome_machine = {
	owned_planets_only = yes
	icon = decision_transform_into_awesome
	enactment_time = 1200
	prerequisites = {
		"tech_dm_ancient_control_center"
	}
	resources = {
		category = decisions
		cost = {
			trigger = {
				owner = {
					is_ai = no
				}
			}
			minerals = 5000
			influence = 100
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
		cost = {
			trigger = {
				owner = {
					is_ai = yes
				}
			}
			minerals = 500
			influence = 10
			sr_dark_matter = 50
			acot_sr_dark_energy = 50
		}
	}
	potential = {
		owner = {
			is_machine_empire = yes
			has_technology = tech_dm_ancient_control_center
		}
		has_enigmatic_capital = no
	}
	allow = {
	}
	effect = {
		hidden_effect = {
			remove_capital_building = yes
			add_building = building_dm_ancient_control_center
		}
	}
	ai_weight = {
		weight = 10000
	}
}

# Create Awesome Nexus
decision_transform_into_awesome_hive = {
	owned_planets_only = yes
	icon = decision_transform_into_awesome
	enactment_time = 1200
	prerequisites = {
		"tech_dm_ancient_hive_cluster"
	}
	resources = {
		category = decisions
		cost = {
			trigger = {
				owner = {
					is_ai = no
				}
			}
			minerals = 5000
			influence = 100
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
		cost = {
			trigger = {
				owner = {
					is_ai = yes
				}
			}
			minerals = 500
			influence = 10
			sr_dark_matter = 50
			acot_sr_dark_energy = 50
		}
	}
	potential = {
		owner = {
			is_hive_empire = yes
			has_technology = tech_dm_ancient_hive_cluster
		}
		has_enigmatic_capital = no
	}
	allow = {
	}
	effect = {
		hidden_effect = {
			remove_capital_building = yes
			add_building = building_dm_ancient_hive_cluster
		}
	}
	ai_weight = {
		weight = 10000
	}
}

######################## ASCENSION UPGRADE DECISION ######################## 
decision_upgrade_gen_growth = {
	owned_planets_only = yes
	icon = decision_microscopic_life
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			energy = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_clone_vats
			has_building = building_stellarite_clone_vats
			has_building = building_phanon_clone_vats
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_gen_growth
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_gen_growth
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_gen_adapt = {
	owned_planets_only = yes
	icon = decision_microscopic_life
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			energy = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_clone_vats
			has_building = building_stellarite_clone_vats
			has_building = building_phanon_clone_vats
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_gen_adapt
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_gen_adapt
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_synth_extra_space = {
	owned_planets_only = yes
	icon = decision_cybernetics
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			minerals = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_synt_center
			has_building = building_stellarite_synt_center
			has_building = building_phanon_synt_center
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_synth_extra_space
		}
	}
	effect = {
		IF = {
			limit = {
				is_ringworld = no
			}
			add_modifier = {
				modifier = acot_modifier_upgrade_synth_extra_space
			}
		}
		IF = {
			limit = {
				is_ringworld = yes
			}
			add_modifier = {
				modifier = acot_modifier_upgrade_synth_extra_space_ringworld
			}
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_synth_assemble = {
	owned_planets_only = yes
	icon = decision_cybernetics
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			minerals = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_synt_center
			has_building = building_stellarite_synt_center
			has_building = building_phanon_synt_center
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_synth_assemble
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_synth_assemble
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_psi_manipulate = {
	owned_planets_only = yes
	icon = decision_wormhole
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			energy = 5000
			unity = 5000
		}
	}
	potential = {
		OR = {
			has_building = building_ae_psi_altar
			has_building = building_stellarite_psi_altar
			has_building = building_phanon_psi_altar
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_psi_manipulate
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_psi_manipulate
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_psi_telekinesis = {
	owned_planets_only = yes
	icon = decision_wormhole
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			energy = 5000
			unity = 5000
		}
	}
	potential = {
		OR = {
			has_building = building_ae_psi_altar
			has_building = building_stellarite_psi_altar
			has_building = building_phanon_psi_altar
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_psi_telekinesis
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_psi_telekinesis
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_hive_harvest = {
	owned_planets_only = yes
	icon = decision_divine_algorithm
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			food = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_hive_evochamber
			has_building = building_stellarite_hive_evochamber
			has_building = building_phanon_hive_evochamber
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_hive_harvest
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_hive_harvest
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_hive_growth = {
	owned_planets_only = yes
	icon = decision_divine_algorithm
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			food = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_hive_evochamber
			has_building = building_stellarite_hive_evochamber
			has_building = building_phanon_hive_evochamber
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_hive_growth
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_hive_growth
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_machine_cyberspace = {
	owned_planets_only = yes
	icon = decision_glitchy_matrix
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			minerals = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_machine_dome
			has_building = building_stellarite_machine_dome
			has_building = building_phanon_machine_dome
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_machine_cyberspace
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_machine_cyberspace
		}
	}
	ai_weight = {
		weight = 100
	}
}

decision_upgrade_machine_upkeep = {
	owned_planets_only = yes
	icon = decision_glitchy_matrix
	enactment_time = 360
	resources = {
		category = decisions
		cost = {
			minerals = 5000
			sr_dark_matter = 500
			acot_sr_dark_energy = 500
		}
	}
	potential = {
		OR = {
			has_building = building_ae_machine_dome
			has_building = building_stellarite_machine_dome
			has_building = building_phanon_machine_dome
		}
		NOT = {
			has_modifier = acot_modifier_upgrade_machine_upkeep
		}
	}
	effect = {
		add_modifier = {
			modifier = acot_modifier_upgrade_machine_upkeep
		}
	}
	ai_weight = {
		weight = 100
	}
}

######################## SPECIAL BUILDING MENU ######################## 
# Chamber Menu
decision_open_assembly_menu = {
	owned_planets_only = yes
	icon = decision_machine_sapience
	potential = {
		OR = {
			has_building = building_ae_machine_dome
			has_building = building_ae_synt_center
			has_building = building_stellarite_machine_dome
			has_building = building_stellarite_synt_center
		}
	}
	allow = {
		OR = {
			has_building = building_ae_machine_dome
			has_building = building_ae_synt_center
			has_building = building_stellarite_machine_dome
			has_building = building_stellarite_synt_center
		}
	}
	effect = {
		planet_event = {
			id = aot_events.82
		}
	}
	ai_weight = {
		weight = 10
		modifier = {
			factor = 0
			owner = {
				resource_stockpile_compare = {
					resource = unity
					value <= 15000
				}
			}
		}
	}
}

######################## Blow uo shups ######################## 
# Blow Up to Fractured World
decision_fractured_self_detonation = {
	icon = decision_planet_beam
	resources = {
		category = decisions
		cost = {
			influence = 250
		}
		cost = {
			trigger = {
				exists = owner
				owner = {
					is_same_empire = root.owner
				}
			}
			influence = 500
			unity = 50000
		}
		cost = {
			trigger = {
				NOT = {
					is_owned_by = root.owner
				}
			}
			influence = 250
		}
	}
	sound = event_ai_started_01
	potential = {
		exists = space_owner
		space_owner = {
			is_same_value = from
		}
		from = {
			has_technology = tech_bombardment_ae_final
		}
		is_star = no
		is_ringworld = no
		is_moon = no
		is_memeable_planet = yes
		is_memeable_ringworld = no
		is_memeable_space_habitat = no
		NOR = {
			is_planet_class = pc_dark_fractured_ae
			is_planet_class = pc_acot_enigmopolis
			is_planet_class = pc_acot_pmc_vault
		}
		NOT = {
			has_planet_flag = final_word_underway
		}
	}
	allow = {
	}
	effect = {
		hidden_effect = {
			set_planet_flag = final_word_underway
			save_event_target_as = showered_planet
			space_owner = {
				enable_special_project = {
					name = ACOT_FINAL_WORD_PLANET
					location = event_target:showered_planet
					owner = this
				}
			}
		}
	}
	ai_weight = {
		weight = 0
	}
}

# Blow Up to Fractured World
decision_stellarite_reactor_detonation = {
	icon = decision_shattered_planet
	enactment_time = 10
	resources = {
		category = decisions
		cost = {
			acot_sr_stellarite = 1000
			influence = 500
			unity = 50000
		}
	}
	sound = event_red_alert
	owned_planets_only = yes
	potential = {
		exists = owner
		owner = {
			is_same_empire = root.owner
		}
		from = {
			has_technology = tech_bombardment_se
		}
		is_star = no
		habitable_structure = no
		NOR = {
			is_planet_class = pc_acot_enigmopolis
		}
	}
	allow = {
		OR = {
			has_building = building_stellarite_generator
			has_building = building_stellarite_generator_ae
			has_building = building_stellarite_nexus
			has_building = building_stellarite_generator_lvl3
		}
	}
	effect = {
		custom_tooltip = decision_stellarite_reactor_detonation_effect
		# determine quality tier, set variable
		hidden_effect = {
			######### STELLARITE NORMAL
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator
						value = 1
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 10000
					}
				}
			}
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator
						value = 2
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 20000
					}
				}
			}
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator
						value >= 3
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 30000
					}
				}
			}
			######### STELLARITE UPGRADED
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator_ae
						value = 1
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 20000
					}
				}
			}
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator_ae
						value = 2
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 40000
					}
				}
			}
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator_ae
						value >= 3
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 60000
					}
				}
			}
			######### STELLARITE LEVEL 3
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator_lvl3
						value = 1
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 40000
					}
				}
			}
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator_lvl3
						value = 2
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 60000
					}
				}
			}
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_generator_lvl3
						value >= 3
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 90000
					}
				}
			}
			######### STELLARITE NEXUS
			if = {
				limit = {
					num_buildings = {
						type = building_stellarite_nexus
						value >= 1
					}
				}
				solar_system = {
					save_event_target_as = imminent_bombing
					every_ship_in_system = {
						limit = {
							fleet = {
								solar_system = {
									is_same_value = event_target:imminent_bombing
								}
							}
						}
						reduce_hp = 40000
					}
				}
			}
			every_owned_pop = {
				kill_pop = yes
			}
			remove_all_buildings = yes
			reroll_deposits = yes
			destroy_colony = yes
			reset_planet = yes
			clear_planet_modifiers = yes
			if = {
				limit = {
					habitable_planet = yes
				}
				change_pc = pc_shattered
			}
		}
	}
	ai_weight = {
		weight = 0
	}
}

################## PHANON VAULT SHADOW RAID LEGENDS ################
decision_acot_infiltrate_phanon_grid = {
	owned_planets_only = yes
	sound = event_ground_battle
	resources = {
		category = decisions
		cost = {
		}
	}
	allow = {
		any_planet_army = {
			is_owned_by = root.owner
		}
		NOR = {
			has_modifier = acot_modifier_vault_delay
			has_global_flag = aot_phanon_content_OFF
		}
		num_free_districts = {
			type = district_acot_phanon_vault
			value = 0
		}
		num_free_districts = {
			type = district_acot_phanon_command
			value = 0
		}
		num_free_districts = {
			type = district_acot_phanon_data
			value = 0
		}
	}
	potential = {
		owner = {
			is_ai = no
		}
		OR = {
			is_planet_class = pc_acot_pmc_vault
			is_same_value = event_target:acot_phanon_vault
		}
		has_ground_combat = no
	}
	effect = {
		hidden_effect = {
			set_planet_flag = ongoing_vault_infiltration
			add_modifier = {
				modifier = acot_modifier_vault_delay
				days = 180
			}
			random_list = {
				50 = {
					while = {
						count = 60
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_soldier
							species = event_target:phanon_operative_species
						}
					}
					while = {
						count = 30
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_elite
							species = event_target:phanon_operative_species
						}
					}
					while = {
						count = 20
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_psi
							species = event_target:phanon_operative_species
						}
					}
					while = {
						count = 1
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_commander
							species = event_target:phanon_operative_species
						}
					}
				}
				50 = {
					while = {
						count = 60
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_droid
							species = event_target:phanon_operative_species
						}
					}
					while = {
						count = 30
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_droid_commando
							species = event_target:phanon_operative_species
						}
					}
					while = {
						count = 20
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_droid_shielder
							species = event_target:phanon_operative_species
						}
					}
					while = {
						count = 1
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_droid_commander
							species = event_target:phanon_operative_species
						}
					}
				}
			}
			random_list = {
				50 = {
					while = {
						count = 5
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_attack_dog
							species = event_target:phanon_operative_species
						}
					}
				}
				50 = {
				}
			}
			random_list = {
				50 = {
					while = {
						count = 7
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_turret
							species = event_target:phanon_operative_species
						}
					}
				}
				50 = {
				}
			}
			random_list = {
				50 = {
					while = {
						count = 5
						create_army = {
							owner = event_target:phanon_security
							type = acot_phanon_defense_trap
							species = event_target:phanon_operative_species
						}
					}
				}
				50 = {
				}
			}
			# Spawn Protecc Drones
			if = {
				limit = {
					check_variable = {
						which = number_of_vault_raids
						value <= 3
					}
				}
				create_vault_defense_drones = yes
			}
			else_if = {
				limit = {
					check_variable = {
						which = number_of_vault_raids
						value = 4
					}
				}
				create_army = {
					owner = event_target:phanon_security
					type = acot_phanon_defense_operative
					species = event_target:phanon_operative_species
				}
				create_vault_defense_drones = yes
			}
		}
	}
	ai_weight = {
		weight = 0
	}
}

################## EMISSARY SENDS HIS REGARDS ################
decision_acot_emissary_landing = {
	sound = choose_ascension_perk_01
	owned_planets_only = no
	resources = {
		category = decisions
		cost = {
		}
	}
	allow = {
		custom_tooltip = {
			text = acot_requires_emissary_orbit
			any_fleet_in_orbit = {
				is_ship_size = precursor_colonizer
				owner = {
					is_same_value = space_owner
				}
			}
		}
	}
	potential = {
		is_a_habitable_planet_megastructure = yes
		NOT = {
			has_planet_flag = has_enigmapolis_project
		}
		solar_system = {
			any_fleet_in_system = {
				is_ship_size = precursor_colonizer
				owner = {
					is_same_value = space_owner
				}
			}
		}
	}
	effect = {
		random_fleet_in_orbit = {
			limit = {
				is_ship_size = precursor_colonizer
			}
			save_event_target_as = orbitting_emissary
		}
		hidden_effect = {
			IF = {
				limit = {
					has_owner = no
				}
				create_colony = {
					owner = event_target:orbitting_emissary.owner
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_delta
						}
						owner = {
							is_regular_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_dm_ancient_palace
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_alpha
						}
						owner = {
							is_regular_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_ae_ancient_palace
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_sigma
						}
						owner = {
							is_regular_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_stellarite_palace
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_phanon
						}
						owner = {
							is_regular_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_phanon_palace
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_delta
						}
						owner = {
							is_hive_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_dm_ancient_hive_cluster
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_alpha
						}
						owner = {
							is_hive_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_ae_ancient_hive_cluster
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_sigma
						}
						owner = {
							is_hive_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_stellarite_hive_cluster
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_phanon
						}
						owner = {
							is_hive_empire = yes
						}
					}
					remove_building = building_colony_shelter
					add_building = building_phanon_hive_cluster
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_delta
						}
						owner = {
							is_machine_empire = yes
						}
					}
					remove_building = building_deployment_post
					add_building = building_dm_ancient_control_center
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_alpha
						}
						owner = {
							is_machine_empire = yes
						}
					}
					remove_building = building_deployment_post
					add_building = building_ae_ancient_control_center
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_sigma
						}
						owner = {
							is_machine_empire = yes
						}
					}
					remove_building = building_deployment_post
					add_building = building_stellarite_control_center
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_phanon
						}
						owner = {
							is_machine_empire = yes
						}
					}
					remove_building = building_deployment_post
					add_building = building_phanon_control_center
				}
				#### DELTA	
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_delta
						}
					}
					while = {
						count = 5
						create_pop = {
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				### ALPHA	
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_alpha
						}
					}
					while = {
						count = 10
						create_pop = {
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				#### SUGNA	
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_sigma
						}
					}
					while = {
						count = 15
						create_pop = {
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				#### PHANONEMINAL
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_phanon
						}
					}
					while = {
						count = 20
						create_pop = {
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				#### INEGA
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_omega
						}
					}
					while = {
						count = 20
						create_pop = {
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
			}
			### EXTRA STUFFS
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_pop
					}
				}
				while = {
					count = 10
					create_pop = {
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_pop
					}
				}
				while = {
					count = 20
					create_pop = {
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_pop
					}
				}
				while = {
					count = 30
					create_pop = {
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_troop
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:orbitting_emissary.owner
						type = acot_garrison_army
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_troop
					}
				}
				while = {
					count = 20
					create_army = {
						owner = event_target:orbitting_emissary.owner
						type = acot_garrison_army
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_troop
					}
				}
				while = {
					count = 25
					create_army = {
						owner = event_target:orbitting_emissary.owner
						type = acot_garrison_army
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_droid
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:orbitting_emissary.owner
						type = acot_garrison_army_droid
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_droid
					}
				}
				while = {
					count = 20
					create_army = {
						owner = event_target:orbitting_emissary.owner
						type = acot_garrison_army_droid
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_droid
					}
				}
				while = {
					count = 25
					create_army = {
						owner = event_target:orbitting_emissary.owner
						type = acot_garrison_army_droid
						species = event_target:orbitting_emissary.owner_species
					}
				}
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_giga
					}
				}
				add_building = building_giga_fortress
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_lab
					}
				}
				add_building = building_ae_enigmatic_lab
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_skyshield
					}
				}
				add_building = building_ae_dark_energy_psg
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_nexus
					}
				}
				add_building = building_ae_dark_matter_synthersizer
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_assembly
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary.owner = {
							is_machine_empire = no
						}
					}
					add_building = building_ae_super_assembly
				}
				if = {
					limit = {
						event_target:orbitting_emissary.owner = {
							is_machine_empire = yes
						}
					}
					add_building = building_ae_super_assembly_machine
				}
			}
			#Stellarite Stuffs
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_giga
					}
				}
				add_building = building_stellarite_giga_fortress_obelisk
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_lab
					}
				}
				add_building = building_stellarite_enigmatic_lab
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_skyshield
					}
				}
				add_building = building_stellarite_psg
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_nexus
					}
				}
				add_building = building_stellarite_nexus
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_stellarite_assembly
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary.owner = {
							is_machine_empire = no
						}
					}
					add_building = building_stellarite_super_assembly
				}
				if = {
					limit = {
						event_target:orbitting_emissary.owner = {
							is_machine_empire = yes
						}
					}
					add_building = building_stellarite_super_assembly_machine
				}
			}
			# Phanon Stuffs
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_giga
					}
				}
				add_building = building_phanon_giga_fortress_obelisk
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_lab
					}
				}
				add_building = building_phanon_enigmatic_lab
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_skyshield
					}
				}
				add_building = building_phanon_psg
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_nexus
					}
				}
				add_building = building_phanon_stellarite_nexus
			}
			if = {
				limit = {
					event_target:orbitting_emissary = {
						has_fleet_flag = precursor_colonizer_extra_phanon_assembly
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary.owner = {
							is_machine_empire = no
						}
					}
					add_building = building_phanon_super_assembly
				}
				if = {
					limit = {
						event_target:orbitting_emissary.owner = {
							is_machine_empire = yes
						}
					}
					add_building = building_phanon_super_assembly_machine
				}
			}
			event_target:orbitting_emissary = {
				delete_fleet = this
			}
			############## ATTACK #############################
			IF = {
				limit = {
					planet_is_hostile = yes
				}
				### DELTA ###
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_delta
						}
					}
					set_planet_flag = will_have_delta_emis
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = no
							}
						}
						while = {
							count = 10
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = yes
							}
						}
						while = {
							count = 10
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army_droid
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
				}
				### ALPHA ###
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_alpha
						}
					}
					set_planet_flag = will_have_alpha_emis
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = no
							}
						}
						while = {
							count = 15
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = yes
							}
						}
						while = {
							count = 15
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army_droid
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
				}
				### SIGMA ###
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_sigma
						}
					}
					set_planet_flag = will_have_sigma_emis
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = no
							}
						}
						while = {
							count = 20
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = yes
							}
						}
						while = {
							count = 20
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army_droid
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
				}
				### PHANON PEPSI ###
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_phanon
						}
					}
					set_planet_flag = will_have_phanon_emis
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = no
							}
						}
						while = {
							count = 25
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = yes
							}
						}
						while = {
							count = 25
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army_droid
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
				}
				### OMEGA ###
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_omega
						}
					}
					set_planet_flag = will_have_omega_emis
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = no
							}
						}
						while = {
							count = 30
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
					if = {
						limit = {
							event_target:orbitting_emissary.owner = {
								is_machine_empire = yes
							}
						}
						while = {
							count = 30
							create_army = {
								owner = event_target:orbitting_emissary.owner
								type = acot_garrison_army_droid
								species = event_target:orbitting_emissary.owner_species
							}
						}
					}
				}
				### EXTRA STUFFS
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_pop
						}
					}
					set_planet_flag = will_have_additional_pop
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_pop
						}
					}
					set_planet_flag = will_have_additional_stellarite_pop
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_pop
						}
					}
					set_planet_flag = will_have_additional_phanon_pop
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_troop
						}
					}
					while = {
						count = 10
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_troop
						}
					}
					while = {
						count = 20
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_troop
						}
					}
					while = {
						count = 30
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_droid
						}
					}
					while = {
						count = 10
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army_droid
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_droid
						}
					}
					while = {
						count = 20
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army_droid
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_droid
						}
					}
					while = {
						count = 30
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army_droid
							species = event_target:orbitting_emissary.owner_species
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_giga
						}
					}
					set_planet_flag = will_have_giga
					while = {
						count = 3
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army_giga
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_giga
						}
					}
					set_planet_flag = will_have_stellarite_giga
					while = {
						count = 6
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army_giga
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_giga
						}
					}
					set_planet_flag = will_have_phanon_giga
					while = {
						count = 10
						create_army = {
							owner = event_target:orbitting_emissary.owner
							type = acot_garrison_army_giga
						}
					}
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_lab
						}
					}
					set_planet_flag = will_have_lab
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_lab
						}
					}
					set_planet_flag = will_have_stellarite_lab
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_lab
						}
					}
					set_planet_flag = will_have_phanon_lab
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_skyshield
						}
					}
					set_planet_flag = will_have_psg
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_skyshield
						}
					}
					set_planet_flag = will_have_stellarite_psg
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_skyshield
						}
					}
					set_planet_flag = will_have_phanon_psg
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_nexus
						}
					}
					set_planet_flag = will_have_nexus
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_nexus
						}
					}
					set_planet_flag = will_have_stellarite_nexus
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_nexus
						}
					}
					set_planet_flag = will_have_phanon_nexus
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_assembly
						}
					}
					set_planet_flag = will_have_assembly
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_stellarite_assembly
						}
					}
					set_planet_flag = will_have_stellarite_assembly
				}
				if = {
					limit = {
						event_target:orbitting_emissary = {
							has_fleet_flag = precursor_colonizer_extra_phanon_assembly
						}
					}
					set_planet_flag = will_have_phanon_assembly
				}
				event_target:orbitting_emissary = {
					delete_fleet = this
				}
			}
		}
	}
	ai_weight = {
		weight = 0
	}
}

decision_acot_gigafortress_deploy = {
	sound = choose_ascension_perk_01
	owned_planets_only = yes
	resources = {
		category = decisions
		cost = {
		}
	}
	prerequisites = {
		tech_giga_fortress
	}
	enactment_time = 30
	allow = {
	}
	potential = {
		OR = {
			has_building = building_giga_fortress
			has_building = building_giga_fortress_fe
			has_building = building_giga_fortress_array
			has_building = building_giga_fortress_lab
			has_building = building_giga_fortress_obelisk
			has_building = building_phanon_giga_fortress_array
			has_building = building_phanon_giga_fortress_obelisk
			has_building = building_phanon_giga_fortress_lab
			has_building = building_stellarite_giga_fortress_array
			has_building = building_stellarite_giga_fortress_obelisk
			has_building = building_stellarite_giga_fortress_lab
		}
	}
	effect = {
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = from.owner
					create_ship = {
						name = random
						random_existing_design = acot_giga_fortress
						graphical_culture = from.owner
					}	
					set_location = {
						target = prev
						distance = 30
						angle = random 
					}
				}
			}
			switch = {
				trigger = has_building
				building_giga_fortress = { remove_building = building_giga_fortress }
				building_giga_fortress_fe = { remove_building = building_giga_fortress_fe }
				building_giga_fortress_array = { remove_building = building_giga_fortress_array last_created_fleet = { set_fleet_flag = acot_gigafortress_array } }
				building_giga_fortress_lab = { remove_building = building_giga_fortress_lab last_created_fleet = { set_fleet_flag = acot_gigafortress_lab } }
				building_giga_fortress_obelisk = { remove_building = building_giga_fortress_obelisk last_created_fleet = { set_fleet_flag = acot_gigafortress_obelisk } }
				building_phanon_giga_fortress_obelisk = { remove_building = building_phanon_giga_fortress_obelisk last_created_fleet = { set_fleet_flag = aot_phanon_gigafortress_obelisk } }
				building_phanon_giga_fortress_lab = { remove_building = building_phanon_giga_fortress_lab last_created_fleet = { set_fleet_flag = aot_phanon_gigafortress_lab } }
				building_phanon_giga_fortress_array = { remove_building = building_phanon_giga_fortress_array last_created_fleet = { set_fleet_flag = aot_phanon_gigafortress_array } }
				building_stellarite_giga_fortress_obelisk = { remove_building = building_stellarite_giga_fortress_obelisk last_created_fleet = { set_fleet_flag = aot_stellarite_gigafortress_obelisk } }
				building_stellarite_giga_fortress_lab = { remove_building = building_stellarite_giga_fortress_lab last_created_fleet = { set_fleet_flag = aot_stellarite_gigafortress_lab } }
				building_stellarite_giga_fortress_array = { remove_building = building_stellarite_giga_fortress_array last_created_fleet = { set_fleet_flag = aot_stellarite_gigafortress_array } }
			}
		}
	}
	ai_weight = {
		weight = 0
	}
}

decision_acot_gigafortress_land = {
	sound = choose_ascension_perk_01

	owned_planets_only = yes

	resources = {
		category = decisions
		cost = {
		}
	}

	prerequisites = {
		tech_giga_fortress
	}
	
	allow = {
		custom_tooltip = {
			text = acot_requires_emissary_orbit
			any_fleet_in_orbit = {
				is_ship_size = acot_giga_fortress	
				owner = {
					is_same_value = from
				}
			}
		}
	}

	potential = {
		exists = owner
		is_a_habitable_planet_megastructure = yes
		NOR = {
			has_building = building_giga_fortress
			has_building = building_giga_fortress_fe
			has_building = building_giga_fortress_array
			has_building = building_giga_fortress_lab
			has_building = building_giga_fortress_obelisk
			has_building = building_phanon_giga_fortress_array
			has_building = building_phanon_giga_fortress_obelisk
			has_building = building_phanon_giga_fortress_lab
			has_building = building_stellarite_giga_fortress_array
			has_building = building_stellarite_giga_fortress_obelisk
			has_building = building_stellarite_giga_fortress_lab
			has_building_construction = building_giga_fortress
			has_building_construction = building_giga_fortress_fe
			has_building_construction = building_giga_fortress_array
			has_building_construction = building_giga_fortress_lab
			has_building_construction = building_giga_fortress_obelisk
			has_building_construction = building_phanon_giga_fortress_array
			has_building_construction = building_phanon_giga_fortress_obelisk
			has_building_construction = building_phanon_giga_fortress_lab
			has_building_construction = building_stellarite_giga_fortress_array
			has_building_construction = building_stellarite_giga_fortress_obelisk
			has_building_construction = building_stellarite_giga_fortress_lab
		}
		solar_system = {
			any_fleet_in_system = {
				is_ship_size = acot_giga_fortress		
				owner = {
					is_same_value = from
				}	
			}
		}
	}
	
	effect = {
		hidden_effect = {
			random_fleet_in_orbit = {
				limit = {
					is_ship_size = acot_giga_fortress	
				}
				save_event_target_as = orbitting_giga
				switch = {
					trigger = has_fleet_flag
					acot_gigafortress_array = { prev = { add_building = building_giga_fortress_array } }
					acot_gigafortress_obelisk = { prev = { add_building = building_giga_fortress_obelisk } }
					acot_gigafortress_lab = { prev = { add_building = building_giga_fortress_lab } }
					aot_phanon_gigafortress_array = { prev = { add_building = building_phanon_giga_fortress_array } }
					aot_phanon_gigafortress_obelisk = { prev = { add_building = building_phanon_giga_fortress_obelisk } }
					aot_phanon_gigafortress_lab = { prev = { add_building = building_phanon_giga_fortress_lab } }
					aot_stellarite_gigafortress_array = { prev = { add_building = building_stellarite_giga_fortress_array } }
					aot_stellarite_gigafortress_obelisk = { prev = { add_building = building_stellarite_giga_fortress_obelisk } }
					aot_stellarite_gigafortress_lab = { prev = { add_building = building_stellarite_giga_fortress_lab } }
					default = { prev = { add_building = building_giga_fortress } }
				}
			}
			event_target:orbitting_giga = {
				delete_fleet = this					
			}
		}
	}
	
	ai_weight = {
		weight = 0
	}
}